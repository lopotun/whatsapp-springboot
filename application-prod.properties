# Production Configuration Example
# This file shows the structure but should NOT contain real credentials
# Use environment variables or external configuration management

spring.application.name=whatsapp-springboot

# Database Configuration - Use environment variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/whatsapp_chatviewer}
spring.datasource.username=${WHATSAPPCHATVIEWER_DB_USERNAME}
spring.datasource.password=${WHATSAPPCHATVIEWER_DB_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# File upload limits
spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=250MB

# Security Configuration
spring.security.user.name=${WHATSAPPCHATVIEWER_ADMIN_USERNAME}
spring.security.user.password=${WHATSAPPCHATVIEWER_ADMIN_PASSWORD}

# Session Configuration
server.servlet.session.timeout=30m
spring.session.timeout=30m

# Logging Configuration - Production appropriate
logging.level.net.kem.whatsapp=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${WHATSAPPCHATVIEWER_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${WHATSAPPCHATVIEWER_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# File Storage Configuration
app.multimedia.storage.path=${MULTIMEDIA_STORAGE_PATH:/var/whatsapp/multimedia-files}

# Server Configuration
server.port=${SERVER_PORT:8080}
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-alias=${SSL_KEY_ALIAS:}

# Health Check Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
